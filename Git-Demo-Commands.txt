Git Demo Commands
==================================================



Setup :
==================================================
Step 1 :
	- Download and install Git from "https://git-scm.com/", or run the command 
	
sudo apt-get install git
	
	- To update git to the latest version, run the following commands

sudo add-apt-repository -y ppa:git-core/ppa
sudo apt-get update
sudo apt-get install git -y



Step 2 :
	- To check the version of git, run the command

git --version




In the terminal give the following commands : (We will be using Github to clone from and push to the repository)
==================================================
Step 1 :
	- Run the command to set the git details for you user.

git config --global user.name "Prasad-N-Ghatol"

git config --global user.email "<user_email>"

	- You can see the details in the "gitconfig" by running the command

cat .gitconfig



Step 2 :
	- Create a repository in Github named "Git-Demo", and then clone it onto your system by running the command

git clone https://github.com/Prasad-N-Ghatol/Git-Demo.git

	- Change directory to the Git-Demo directory, and run the command to initialize git, and can also check the status

cd Git-Demo

git init

git status

	- A --short version of status is also available
	
git status --short



Step 3 :
	- Now create files and make changes to the files in this directory. 

	- After the required tasks are performed, perform "git status"
	
	- Now stage the changed files by running the command

git add <file>				=> To add the files individually.

	OR

git add .					=> To add all the files.

	OR

git add --all				=> To add all the files.

	OR

git add -A					=> To add all the files (Shorthand for --all).

	- To unstage the staged file run the command

git rm --cached <file>



Step 4 :
	- After the changes are staged, we can to commit the changes by running thr command

git commit -m "The first version of Git-Demo !!"

	- If needed we can also commit directly, without stages the changes first

git commit -a -m "Direct commit without staging changes for Git-Demo"


Step 5 :
	- First we need to create an access token, inorder to push the files to Github

On Github, 
Go to your profile 
	-> Settings 
	-> Developer settings 
	-> Personal access tokens 
	-> Tokens (classic) 
	-> Generate new token 
	-> Generate new token (classic) 
	-> 	Give name to the token "Git-Demo-Token"
		Set Expiration (I set it as 7 days)
		In Select scopes, check the tickbox "repo"
	-> Click on "Generate Token"
	-> Save the token safely, as it is to be provided as the password during the "git push".



Step 6 :
	- To push the commited file to Github, run the following commands

git push

	- Provide the username.
	- Provide the password (Password is the Personal Access Token(PAT), that was generated in the previous step)

	- After the push is complete, go to your Github Page, and refersh the page, to see the newly added files.




Branch
==================================================
Step 1 :
	- Create a new branch by running the command
	
git branch a_new_branch

	- You can check which branches are available, by the command

git branch

	- Change to the new branch by the command

git checkout a_new_branch



Step 2 :
	- Add new files, modify some files, in this new branch
	- After the files are added / modified, stage and then commit the changes to that branch
	
	- To merge the branch with the main branch, first change to the main branch and then merge the other branch, this can be done by running the following command
	
git checkout main

git merge a_new_branch

	- If needed, you can delete the new branch by running the command

git branch -d a_new_branch


Step 3 :
	- Now you can push the changes and also the new branch to the Github.


Step 4 :
	- 


Step 5 :
	- 


Step 6 :
	- 














